#include <avr/io.h>
#include <avr/interrupt.h>
volatile bool motionDetected = false;
volatile bool PIRstate = false;
const int pirPin = 6;
const int ledPin2 = 2;
const int ledPin3 = 3;
const int ledPin4 = 4;
const int buzzerPin = 8;
const int buttonPin = 7;
const int newLedPin = 11;
const int motionThreshold = 1;
const int motionCheckDelay = 500;
const int soilMoisturePin = 9;
int timer1_compare_match;
int celsius = 0;
int baselineTemp = 40;
unsigned long previousMillis = 0;
unsigned long lastMotionCheck = 0;
unsigned long lastBlinkMillis = 0;
bool blinkLed = false;
const long interval = 2000;
void setup() {
pinMode(A0, INPUT);
pinMode(pirPin, INPUT);
pinMode(ledPin2, OUTPUT);
pinMode(ledPin3, OUTPUT);
pinMode(ledPin4, OUTPUT);
pinMode(buzzerPin, OUTPUT);
pinMode(newLedPin, OUTPUT);
pinMode(buttonPin, INPUT_PULLUP);
DDRB&=~(1<<DDD6);
pinMode(buzzerPin, OUTPUT);
pinMode(A0, INPUT);
Serial.begin(9600);
PCMSK2 |= (1 << PCINT22);
PCICR |= (1 << PCIE2);
noInterrupts();
TCCR1A = 0;
TCCR1B = 0;
timer1_compare_match = 31249;
TCNT1 = timer1_compare_match;
TCCR1B |= (1 << CS12);
TIMSK1 |= (1 << OCIE1A);
TCCR0A = 0x02;
TCCR0B = 0x05;
OCR0A = 156;
TIMSK0 |= (1 << OCIE0A);
interrupts();
}
ISR(PCINT0_vect) {
}
ISR(TIMER1_COMPA_vect) {
}
ISR(TIMER0_COMPA_vect) {
}
ISR(PCINT2_vect) {
if (digitalRead(pirPin) == HIGH) {
Serial.println("MOTION DETECTED!");
digitalWrite(buzzerPin, HIGH);
}
else digitalWrite(buzzerPin, LOW);
}
void loop() {
unsigned long currentMillis = millis();
celsius = map(((analogRead(A0) - 20) * 3.04), 0, 1023, -40, 125);
Serial.print("CURRENT TEMP: ");
Serial.print(celsius);
delay(1000);
controlLEDs();
int soilMoistureStatus = digitalRead(soilMoisturePin);
Serial.print("Soil Moisture Value ");
if (soilMoistureStatus == HIGH) {
Serial.println("Soil=moist.");
digitalWrite(newLedPin, HIGH);
} else {
Serial.println("Soil=dry.");
digitalWrite(newLedPin, LOW);
} delay(1000);
}
void controlLEDs() {
digitalWrite(ledPin2, LOW);
digitalWrite(ledPin3, LOW);
digitalWrite(ledPin4, LOW);
if (celsius >= baselineTemp && celsius < baselineTemp + 10) {
digitalWrite(ledPin2, HIGH);
} else if (celsius >= baselineTemp + 10 && celsius < baselineTemp + 20) {
digitalWrite(ledPin2, HIGH);
digitalWrite(ledPin3, HIGH);
} else if (celsius >= baselineTemp + 20) {
digitalWrite(ledPin2, HIGH);
digitalWrite(ledPin3, HIGH);
digitalWrite(ledPin4, HIGH);
}
}
void toggleLED() {
digitalWrite(ledPin4, !digitalRead(ledPin4));
}
