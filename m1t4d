#include <avr/io.h>
#include <avr/interrupt.h>

const int pirPin1 = 2;   // PIR sensor 1 input pin
const int pirPin2 = 3;   // PIR sensor 2 input pin
const int ledPin = 4;    // LED output pin
const int buzzerPin = 5; // Buzzer output pin

volatile bool motionDetected1 = false;
volatile bool motionDetected2 = false;

// Timer0 interrupt variables
const int timer0Interval = 1000; // Interval for Timer0 interrupt in milliseconds
volatile unsigned long timer0Millis = 0;

// Timer1 interrupt variables
const int timer1Interval = 1000; // Interval for Timer1 interrupt in milliseconds
volatile bool timer1Flag = false;

void setup() {
  Serial.begin(9600);

  pinMode(pirPin1, INPUT);
  pinMode(pirPin2, INPUT);
  pinMode(ledPin, OUTPUT);
  pinMode(buzzerPin, OUTPUT);

  // Enable Pin Change Interrupts for the pins of interest
  PCICR |= (1 << PCIE2); // Enable PCINT[23:16] interrupts
  PCMSK2 |= (1 << PCINT18) | (1 << PCINT19); // Set pin change interrupt mask for pins 2 and 3

  // Configure Timer0 for interrupt
  cli(); // Disable interrupts
  TCCR0A = 0; // Set Timer0 control register A to 0
  TCCR0B = 0; // Set Timer0 control register B to 0
  TCNT0 = 0; // Initialize counter value to 0
  OCR0A = 249; // Set Output Compare Register (OCR) for desired timer interval
  TCCR0B |= (1 << WGM01); // Enable CTC mode
  TCCR0B |= (1 << CS02) | (1 << CS00); // Set prescaler to 1024 and start the timer
  TIMSK0 |= (1 << OCIE0A); // Enable Timer0 compare match A interrupt

  // Configure Timer1 for interrupt
  TCCR1A = 0; // Set Timer1 control register A to 0
  TCCR1B = 0; // Set Timer1 control register B to 0
  TCNT1 = 0; // Initialize counter value to 0
  OCR1A = 15624; // Set Output Compare Register (OCR) for desired timer interval
  TCCR1B |= (1 << WGM12); // Enable CTC mode
  TCCR1B |= (1 << CS12) | (1 << CS10); // Set prescaler to 1024 and start the timer
  TIMSK1 |= (1 << OCIE1A); // Enable Timer1 compare match A interrupt
  sei(); // Enable interrupts
}

void loop() {
  // Your main code here
}

// Pin Change Interrupt Service Routine (ISR) for pins 2 and 3
ISR(PCINT2_vect) {
  // Check if motion detected on PIR sensor 1
  if (digitalRead(pirPin1) == HIGH) {
    motionDetected1 = true;
    Serial.println("Motion detected on sensor 1");
  }
  
  // Check if motion detected on PIR sensor 2
  if (digitalRead(pirPin2) == HIGH) {
    motionDetected2 = true;
    Serial.println("Motion detected on sensor 2");
  }
  
  
  
}

// Timer0 compare match A interrupt service routine
ISR(TIMER0_COMPA_vect) {
  timer0Millis += timer0Interval; // Increment millis() equivalent
  Serial.println("Timer0 interrupt");
}

// Timer1 compare match A interrupt service routine
ISR(TIMER1_COMPA_vect) {
  timer1Flag = true; // Set Timer1 flag
  Serial.println("Timer1 interrupt");
}
